Evan Bissell
2553966

For project 1, I was a member of the business consulting team. We were the ones responsible for organizing a presentation to introduce our team's quaternion calculator to an audience. After some time discussing how to go about pitching our product, an agreement was made to conduct a PowerPoint presentation describing the nature of the program's problem solving methods and also why the program is efficient and unique. 

In the early stages of development, the user interface wasn't stable enough to begin any final documentation. 
Alternatively, I began navigating through the individual functions when troubleshooting and debugging. This allowed me to become much more familiar with the program's functionality. After the major bugs were repaired, I moved away from the programming and testing end and got together with the business team yet again. At this point, it was possible to derive a generally accurate output for every function operation (minus some very minor fixes). We called each function individually and took a snippet of each function call and its corresponding output to paste into the PowerPoint (Later omitted due to changes in presentation strategies).

As for additional functionality/efficiency, structure approach rather than a list; another great contribution to the "special functionality" list. By this point, the program was running very smoothly with very few errors. It was decided that we would each assign ourselves to individual subtasks in hopes that we could combine our work in the end to form a solid, cohesive presentation.
It wasn't long until the design/style of the presentation became a matter of importance. I created the "Qmax" logo and the design of the PowerPoint slides with my experience with Adobe Illustrator

The team did an excellent job executing their designated roles. The only noticeable struggles (and I say that very lightly) occurred in the transitioning stages of the project (e.g. passing the program/PowerPoint on from one subgroup to the next and risking potential miscommunications or altered code). There were a few instances that required us to backtrack and correct the program's behavior before the next project phase could be put into action. However, these problems are understandably inherent to any developmental process and can be seen as a learning experience. 
