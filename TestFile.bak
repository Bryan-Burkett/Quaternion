#lang racket
(require "Quaternion.rkt")
(require "qreader.rkt")

;It was found that the reader does not function correctly when given just -i,-j, or -k:
;>1-i-k
;(quaternion 1 1 0 1)
;I think that this can be fixed just by replacing a few lines of code with something like this:
;(if (equal? AllButlastCharOfNext "") ;This is the instance that the term is a standalone i j or k
 ;                     (if(equal? sign -1) -1           ;This assigns the minus sign when it is just -i -j or -k
  ;                    1) 
   ;                   (* sign (string->number AllButlastCharOfNext))))
   ;------------------------------------------------------------------------
   
   
   ;This generated an error for some reason:
   ;>.05+.005j
;. . .05+.005j: undefined;
 ;cannot reference an identifier before its definition
 
 ;.005i and .005j and .005k by themselves work
 ;.005i+.005j+.005k works as well
 ;So does 1+.005i+.005j+.005k
 ;.05+j does NOT work
 ;0.05+j DOES work
 ;1/5+j does NOT work
 
 ;Summary:
 
 ;starting with a fraction for h yields:
  ;quaternion.rkt:23:58: *: contract violation
  ;expected: number?
  ;given: #f
  ;argument position: 2nd
  ;other arguments...:
   ;1
   
   ;Starting with a decimal for h returns undefined identifier error
   ;However, a decimal starting with 0. works
   ;.05+i+j+k ---> ERROR
   ;0.05+i+j+k --> WORKS
   
 
 
 ;--------------------------------------------------
 ;Probably from the same error:
 ;>1/5+.005i-54893j-1/929k
;. . quaternion.rkt:23:58: *: contract violation
 ; expected: number?
  ;given: #f
  ;argument position: 2nd
  ;other arguments...:
  ; 1
  ;
  ;
  ;


;------------------------------
;Testing the sin and cos functions and comparing to this site: http://home.comcast.net/~tamivox/redbear/qtrn_calc/index.html
;I think I found an error with ours:

;Only giving a vector as an input with no real coefficient returns nan for the values 
;(sin 2i+3j) = (quaternion 0 +nan.0 +nan.0 0) | (cos i+j+k) = (quaternion +nan.0 +nan.0 +nan.0 +nan.0)

;However, in the online calculator, actual values are returned 
;(sin 2i+3j) = 10.199i+15.299j | (cos i+j+k) = 2.915 

; ----- It was actually an error in expt- should be fixed now