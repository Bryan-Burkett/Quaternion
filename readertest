#lang racket

(define (do-verb)
  (printf ">")
  (flush-output)
  (let* ([line (read-line)]
         [input (if (eof-object? line)
                    '(quit)
                    (let ([port (open-input-string line)])
                      (for/list ([v (in-port read port)]) v)))])
                (cond
                 [(andmap symbol? input) 
                  (print (eval (symbol->string (car input))))]   ;;;evaluates it
                 [(list? input) 
                  (print (eval (car input)))];;;;;outputs to string                 ) 
    ""
              )
  (printf "\n")
   (do-verb))
  
